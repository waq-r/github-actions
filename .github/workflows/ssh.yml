name: SSH into remote server

# on:
#   workflow_run:
#     workflows: ["Spin up a runner"]
#     types:
#       - completed
on:
  - push
jobs:
  deploy-frontend:
    runs-on: ubuntu-latest #using latest ubuntu to build application
    steps:
      # - name: executing remote ssh commands using ssh key
      #   uses: appleboy/ssh-action@v1.0.3
      #   with:
      #     host: ${{ secrets.SSH_HOST }}
      #     username: ${{ secrets.SSH_USER }}
      #     key: ${{ secrets.PRIVATE_KEY }}
      #     passphrase: ${{ secrets.PASSPHRASE }}
      #     script: |
      #         cd ~/ustream
      #         pm2 status

      # - name: Set Up SSH
      #   run: |
      #     mkdir -p ~/.ssh
      #     ls ~/.ssh -al
      #     ssh-keyscan -H echo "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
      #     chmod 644 ~/.ssh/known_hosts
      # - name: Execute command on server
      #   run: |
      #     echo "${{ secrets.PASSPHRASE }}" | \
      #     mkdir -p ~/.ssh
      #     eval `ssh-agent -s`
      #     ssh-add <(echo "${SSH_PRIVATE_KEY}" | base64 --decode | tr -d "\r")
      #     ssh-keyscan -H echo "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
      #     chmod 644 ~/.ssh/known_hosts

      - name: Add SSH key
        env:
          PRIVATE_KEY: ${{secrets.PRIVATE_KEY}}
        run: |
          mkdir -p ~/.ssh
          ls ~/.ssh -al
          eval `ssh-agent -s`
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          sudo chmod 400 ~/.ssh/id_rsa
          ssh-keygen -f ~/.ssh/id_rsa -y > ~/.ssh/id_rsa.pub
          ssh-keygen -l -f ~/.ssh/id_rsa.pub
          ssh-keyscan -H echo "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
          ls -altr ~/.ssh
          echo "${{ secrets.PASSPHRASE }}" > ~/.passphrase
          chmod 600 ~/.passphrase
          ls -altr ~/
          cat id_rsa | tr -d '\r' | DISPLAY=None SSH_ASKPASS=~/.passphrase ssh-add - >/dev/null
          ssh-add -l

      - name: SSH into remote Server and execute eommand
        run: |
          echo "${{ secrets.PASSPHRASE }}" | \
          echo "$PRIVATE_KEY"  -o "StrictHostKeyChecking no" ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} whoami
